-- Add a global variable to store the webhook URL
getgenv().WebH = "https://discord.com/api/webhooks/1153849889873203220/4PNEe2bCRoMHnPLSaJllDARBAMTlPVhNnV_-cUkMI3XgBm_RXtS-k-TKvAX0rhcYIDoi"

-- Create a ScreenGui and Frame
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")
local UICorner_3 = Instance.new("UICorner")
local ClearButton = Instance.new("TextButton")
local LoadingLabel = Instance.new("TextLabel")
local PlayerInfoTextLabel = Instance.new("TextLabel")

-- Add a parameter to control whether to close the UI after sending the webhook
local CloseAfterSend = true

-- Create a new TextLabel for player information
PlayerInfoTextLabel.Parent = Frame
PlayerInfoTextLabel.Text = string.format(
    "**Player ID:** %d\n**Username:** %s\n**Display Name:** %s\n**Game Link:** %s",
    game.Players.LocalPlayer.UserId,
    game.Players.LocalPlayer.Name,
    game.Players.LocalPlayer.DisplayName,
    game:GetService("UrlService"):GetGameUrl()
)

-- Style the TextLabel
PlayerInfoTextLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
PlayerInfoTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerInfoTextLabel.BorderSizePixel = 0
PlayerInfoTextLabel.Size = UDim2.new(1, 0, 0.25, 0)
PlayerInfoTextLabel.Position = UDim2.new(0, 0, 0.75, 0)
PlayerInfoTextLabel.Font = Enum.Font.SourceSans
PlayerInfoTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerInfoTextLabel.TextSize = 18
PlayerInfoTextLabel.TextWrapped = true

-- Create a new TextBox for message input
TextBox.Parent = Frame
TextBox.PlaceholderText = "Enter your message..."
TextBox.Size = UDim2.new(1, -20, 0.5, -20)
TextBox.Position = UDim2.new(0, 10, 0.25, 10)
TextBox.ClearTextOnFocus = false
TextBox.Font = Enum.Font.SourceSans
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 18
TextBox.TextWrapped = true
TextBox.BackgroundTransparency = 0.5
TextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0

-- Create a new TextButton for sending the webhook
TextButton.Parent = Frame
TextButton.Text = "Submit"
TextButton.Size = UDim2.new(0.5, -15, 0.25, -10)
TextButton.Position = UDim2.new(0, 10, 0.75, 5)
TextButton.Font = Enum.Font.SourceSans
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 18
TextButton.TextWrapped = true
TextButton.BackgroundColor3 = Color3.fromRGB(30,144,255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0

-- Create a new TextButton for clearing the message input
ClearButton.Parent = Frame
ClearButton.Text = "Clear"
ClearButton.Size = UDim2.new(0.5, -15, 0.25, -10)
ClearButton.Position = UDim2.new(0.5, 5, 0.75, 5)
ClearButton.Font = Enum.Font.SourceSans
ClearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearButton.TextSize = 18
ClearButton.TextWrapped = true
ClearButton.BackgroundColor3 = Color3.fromRGB(30,144,255)
ClearButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ClearButton.BorderSizePixel = 0

-- Create a new TextLabel for loading feedback
LoadingLabel.Parent = Frame
LoadingLabel.Text = "Sending..."
LoadingLabel.Size = UDim2.new(1, -20, 1, -20)
LoadingLabel.Position = UDim2.new(0, 10, 0, 10)
LoadingLabel.Font = Enum.Font.SourceSans
LoadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingLabel.TextSize = 18
LoadingLabel.TextWrapped = true
LoadingLabel.Visible = false

-- Style the Frame
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0.5, -20, 0.5, -20)
Frame.Position = UDim2.new(0.25, 10, 0.25, 10)
Frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 2

-- Style the UI Corners of the Frame and TextBox
UICorner.CornerRadius = UDim.new(0,5)
UICorner.Parent = TextBox

UICorner_2.CornerRadius = UDim.new(0,5)
UICorner_2.Parent = Frame

UICorner_3.CornerRadius=UDim.new(1,5)
UICorner_3.Parent=TextButton

-- Create a new Tween for showing the UI initially
local ShowUITween=game:GetService("TweenService"):Create(Frame,TweenInfo.new(1),{Size=UDim2.new(0.5,-20,.5,-20)})
ShowUITween:Play()

-- Create a new Tween for hiding the UI after sending the webhook
local HideUITween=game:GetService("TweenService"):Create(Frame,TweenInfo.new(.5),{Size=UDim2.new(0,-20,.5,-20)})

-- Create a new function for sending the webhook
local function sendWebhook(message)
    -- Create a new HttpService instance for sending the request
    local HttpService=game:GetService("HttpService")

    -- Create a new data table for the webhook payload
    local data={
        ["content"]=message,
        ["username"]=game.Players.LocalPlayer.Name,
        ["avatar_url"]=string.format("https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png", game.Players.LocalPlayer.UserId),
    }

    -- Encode the data table as JSON format and send the request to the webhook URL using HttpService:PostAsync()
    local success,response=pcall(function()
        return HttpService:PostAsync(getgenv().WebH,
            HttpService:JSONEncode(data),
            Enum.HttpContentType.ApplicationJson,
            false)
    end)

    -- Check if the request was successful and show feedback accordingly
    if success then
        LoadingLabel.Visible=false
        if CloseAfterSend then HideUITween:Play() end -- Hide the UI if CloseAfterSend is true
    else
        LoadingLabel.Visible=false
        warn("Webhook failed to send:", response)
    end
end

-- Create a new function for handling button presses
local function onButtonPress()
    -- Get the message from the TextBox and send it to the webhook using sendWebhook()
    local message=TextBox.Text
    if message~="" then -- Check if the message is not empty before sending it
        LoadingLabel.Visible=true
        sendWebhook(message)
    end
end

-- Connect the onButtonPress() function to the TextButton's MouseButton1Click event using TextButton.MouseButton1Click:Connect()
TextButton.MouseButton1Click:Connect(onButtonPress)

-- Create a new function for clearing the TextBox's text when ClearButton is clicked
local function onClearButtonClick()
    TextBox.Text=""
end

-- Connect the onClearButtonClick() function to the ClearButton's MouseButton1Click event using ClearButton.MouseButton1Click:Connect()
ClearButton.MouseButton1Click:Connect(onClearButtonClick)

-- Add a new event handler to close the UI when CloseButton is clicked using ScreenGui.Enabled=false and wait() to prevent input blocking issues.
ScreenGui.Enabled=true -- Set ScreenGui.Enabled=true initially to allow input.
ScreenGui:GetPropertyChangedSignal("Enabled"):Connect(function()
    if not ScreenGui.Enabled then wait() ScreenGui:Destroy() end -- Destroy ScreenGui after waiting to prevent input blocking issues.
end)

-- Add a new event handler to show feedback when CloseButton is clicked using LoadingLabel.Text="Closing..." and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    LoadingLabel.Visible=true LoadingLabel.Text="Closing..."
end)

-- Add a new event handler to hide feedback when CloseButton is clicked using LoadingLabel.Visible=false and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    LoadingLabel.Visible=false wait()
end)

-- Add a new event handler to hide the UI when CloseAfterSend is true using HideUITween:Play() and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if CloseAfterSend then HideUITween:Play() end wait()
end)

-- Add a new event handler to show feedback when CloseAfterSend is true using LoadingLabel.Visible=true and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if CloseAfterSend then LoadingLabel.Visible=true LoadingLabel.Text="Sending..." end wait()
end)

-- Add a new event handler to clear the TextBox's text when CloseAfterSend is true using TextBox.Text="" and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if CloseAfterSend then TextBox.Text="" end wait()
end)

-- Add a new event handler to close the UI when CloseAfterSend is true using ScreenGui.Enabled=false and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if CloseAfterSend then ScreenGui.Enabled=false end wait()
end)

-- Add a new event handler to play ShowUITween when CloseAfterSend is true using ShowUITween:Play() and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if CloseAfterSend then ShowUITween:Play() end wait()
end)

-- Add a new event handler to clear the TextBox's text when CloseAfterSend is false using TextBox.Text="" and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if not CloseAfterSend then TextBox.Text="" end wait()
end)

-- Add a new event handler to hide feedback when CloseAfterSend is false using LoadingLabel.Visible=false and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if not CloseAfterSend then LoadingLabel.Visible=false end wait()
end)

-- Add a new event handler to play ShowUITween when CloseAfterSend is false using ShowUITween:Play() and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if not CloseAfterSend then ShowUITween:Play() end wait()
end)

-- Add a new event handler to set ScreenGui.Enabled=true when CloseAfterSend is false using ScreenGui.Enabled=true and wait() to prevent input blocking issues.
ScreenGui:FindFirstChildOfClass("CloseButton").MouseButton1Click:Connect(function()
    if not CloseAfterSend then ScreenGui.Enabled=true end wait()
end)

-- Add a new event handler to clear the TextBox's text when ScreenGui is destroyed using TextBox.Text="".
ScreenGui.AncestryChanged:Connect(function(_, parent)
    if parent==nil then TextBox.Text="" end -- Clear TextBox text when ScreenGui is destroyed.
end)

-- Add a new event handler to play ShowUITween when ScreenGui is destroyed using ShowUITween:Play().
ScreenGui.AncestryChanged:Connect(function(_, parent)
    if parent==nil then ShowUITween:Play() end -- Play ShowUITween when ScreenGui is destroyed.
end)

